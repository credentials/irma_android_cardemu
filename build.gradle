apply plugin: 'com.android.application'
apply plugin: 'maven'

version="0.8"
group="org.irmacard"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.1'
    }
}

repositories {
    mavenLocal()
    maven {
        url "https://credentials.github.io/repos/maven2/"
    }

    // Use this to get minimal android library
    maven {
        url "https://raw.github.com/embarkmobile/zxing-android-minimal/mvn-repo/maven-repository/"
    }
    mavenCentral()
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
        }
    }

    lintOptions {
        // BCProv references javax.naming
        // CredentialsAPI references java.awt and java.swing
        disable 'InvalidPackage'
    }
}

if (project.file('acra.gradle').exists()) {
    apply from: 'acra.gradle'
} else {
    android {
        buildTypes.all { type ->
            type.buildConfigField "String", "acraServer", '""'
            type.buildConfigField "String", "acraLogin", '""'
            type.buildConfigField "String", "acraPassword", '""'
            type.buildConfigField "org.acra.ReportingInteractionMode", "acraMode",
                    "org.acra.ReportingInteractionMode.SILENT"
            type.resValue "string", "crash_toast_text", ""
        }
    }
}

android {
    buildTypes.all { type ->
        type.buildConfigField "String", "enrollServer", '"https://demo.irmacard.org/tomcat/irma_mno_server/api/v1"'
    }
    buildTypes {
        release {
            buildConfigField "String", "metricServer", '"https://demo.irmacard.org/tomcat/irma_metrics_server/api/v1"'
            buildConfigField "String", "updateServer", '"https://credentials.github.io/appupdates"'
        }
        debug {
            buildConfigField "String", "metricServer", '""'
            buildConfigField "String", "updateServer", '""'
        }
    }
}

if(project.hasProperty("cardemuSigning") && new File((String)project.property("cardemuSigning")).exists()) {
    Properties props = new Properties()
    props.load(new FileInputStream(file(project.property("cardemuSigning"))))

    android {
        signingConfigs {
            release {
                storeFile file(props['keystore'])
                keyAlias "IRMA"
                storePassword props['keystorepassword']
                keyPassword props['keypassword']
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    }
}


dependencies {
    compile 'com.loopj.android:android-async-http:1.4.6'
    compile 'com.android.support:support-v4:19.1.0'
    compile 'com.google.code.gson:gson:2.2.2'

    compile 'ch.acra:acra:4.6.2'

    compile 'com.noveogroup.android:android-logger:1.3.5'

    // zxing QR code libraries
    compile 'com.embarkmobile:zxing-android-minimal:2.0.0@aar'
    compile 'com.embarkmobile:zxing-android-integration:2.0.0@aar'
    compile 'com.google.zxing:core:3.0.1'

    compile "org.irmacard.android:irma_android_library:0.9.2"
    compile 'org.irmacard.metrics:irma_metrics_common:0.1.1'
    compile('org.irmacard.mno:irma_mno_common:0.1.1')  {
        transitive = false // Prevent it from including Scuba
    }
    compile 'net.sf.scuba:scuba_sc_android:0.0.7-irma'
    compile 'net.sf.scuba:scuba_smartcards:0.0.7-irma'

    compile 'com.madgag.spongycastle:prov:1.52.0.0'
    compile('org.jmrtd:jmrtd:0.5.2') {
        transitive = false // Prevent it from including Scuba 0.0.6
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}
